AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Serverless-GameServer-Workshop

Globals:
  Function:
    Timeout: 300 # Lambda function timeout, second

# All resources will be defined in the SAM template
# SAM will create a cloudformation to manage all resources
Resources:
  PlayerMgr: # Resource name
    Type: AWS::Serverless::Api # Resource type, APIGateway
    Properties:
      Name: Workshop-PlayerMgr # APIGATEWAY name
      StageName: dev

  PlayerInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: 'Player Info'
      CodeUri: player-manager/ # Lambda function code path
      Handler: main.main_handler # Lambda function method
      Runtime: python3.9 # Lambda runtime, support NodeJS, Python, Java, Golang
      Architectures: # CPU arch
        - arm64 # Recommand ARM
      Policies:
        - AmazonDynamoDBFullAccess
      Events: # Lambda trigger
        CreateUserEvent: # Name
          Type: Api
          Properties:
            Path: /create_user
            Method: post
            RestApiId: !Ref PlayerMgr
        DeleteUserEvent:
          Type: Api
          Properties:
            Path: /delete_user
            Method: post
            RestApiId: !Ref PlayerMgr
        CreateUserOptionsEvent:
          Type: Api
          Properties:
            Path: /create_user
            Method: options
            RestApiId: !Ref PlayerMgr
        DeleteUserOptionsEvent:
          Type: Api
          Properties:
            Path: /delete_user
            Method: options
            RestApiId: !Ref PlayerMgr

  PlayerInfoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "user_id"
          AttributeType: "S" # user_id is string
      KeySchema:
        - AttributeName: "user_id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True # Server Side Encryption
      TableName: "player_info" # DDB table name

#------ Show outputs of resources ------#
Outputs:
  PlayerMgrURI:
    Description: "API Gateway endpoint URL for PlayerMgr"
    Value: !Join [ '',
      [
        'https://', !Ref PlayerMgr, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/dev', ' ',
        '[create_user, delete_user]'
      ]
    ]
